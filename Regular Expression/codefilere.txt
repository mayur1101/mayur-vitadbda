Python 3.7.2 (tags/v3.7.2:9a3ffc0492, Dec 23 2018, 23:09:28) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> import numpy as np
>>> a=np.linspace(1,2,2)
>>> a
array([1., 2.])
>>> a=np.linspace(1,2,10)
>>> a
array([1.        , 1.11111111, 1.22222222, 1.33333333, 1.44444444,
       1.55555556, 1.66666667, 1.77777778, 1.88888889, 2.        ])
>>> a=np.linspace(10,20,10)
>>> a
array([10.        , 11.11111111, 12.22222222, 13.33333333, 14.44444444,
       15.55555556, 16.66666667, 17.77777778, 18.88888889, 20.        ])
>>> a=np.linspace(1,2,30)
>>> a
array([1.        , 1.03448276, 1.06896552, 1.10344828, 1.13793103,
       1.17241379, 1.20689655, 1.24137931, 1.27586207, 1.31034483,
       1.34482759, 1.37931034, 1.4137931 , 1.44827586, 1.48275862,
       1.51724138, 1.55172414, 1.5862069 , 1.62068966, 1.65517241,
       1.68965517, 1.72413793, 1.75862069, 1.79310345, 1.82758621,
       1.86206897, 1.89655172, 1.93103448, 1.96551724, 2.        ])
>>> a=np.arange(10)
>>> a
array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
>>> a=np.arange(10).reshape(2,5)
>>> a
array([[0, 1, 2, 3, 4],
       [5, 6, 7, 8, 9]])
>>> a=np.arange(10)
>>> a.shape
(10,)
>>> a.reshape(5,2)
array([[0, 1],
       [2, 3],
       [4, 5],
       [6, 7],
       [8, 9]])
>>> import re
>>> re.findall("is","this is what we want")
['is', 'is']
>>> re.finditer("is","this is what we want")
<callable_iterator object at 0x000001C5282F8E48>
>>> data=re.finditer("is","this is what we want")
>>> data.span()
Traceback (most recent call last):
  File "<pyshell#20>", line 1, in <module>
    data.span()
AttributeError: 'callable_iterator' object has no attribute 'span'
>>> for i in re.finditer("is","this is it"):
	print(i.span())

	
(2, 4)
(5, 7)
>>> re.findall("is","this is what we want")
['is', 'is']
>>> regx=re.compile("is")
>>> regx.findall("this is going to serch is")
['is', 'is', 'is']
>>> regx2=re.compile("to")
>>> regx3=re.compile(" ")
>>> s="this  is sample to search yess"
>>> regx.findall(s)
['is', 'is']
>>> regx2.findall(s)
['to']
>>> regx3.findall(s)
[' ', ' ', ' ', ' ', ' ', ' ']
>>> regx=re.compile("is")
>>> result=regx.findall("this is going to serch is")
>>> len(result)
3
>>> s="clksnfwiq352q523m5njn532n5in5iuh3215h3j25b5yvi5235e@!$!@#$@#$"
>>> data=re.findall("[a-z]",s)
>>> data
['c', 'l', 'k', 's', 'n', 'f', 'w', 'i', 'q', 'q', 'm', 'n', 'j', 'n', 'n', 'i', 'n', 'i', 'u', 'h', 'h', 'j', 'b', 'y', 'v', 'i', 'e']
>>> data=re.findall("[0-9]",s)
>>> data
['3', '5', '2', '5', '2', '3', '5', '5', '3', '2', '5', '5', '3', '2', '1', '5', '3', '2', '5', '5', '5', '2', '3', '5']
>>> data=re.findall("^[a-z]",s)
>>> data
['c']
>>> data=re.findall("[A-Z]",s)
>>> data
[]
>>> s=" sana dhana mana chana kana"
>>> data=re.findall("[s,m]",s)
>>> data
['s', 'm']
>>> data=re.findall("[s,m]*",s)
>>> data
['', 's', '', '', '', '', '', '', '', '', '', '', 'm', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '']
>>> re.findall("[s,m]*",s)
['', 's', '', '', '', '', '', '', '', '', '', '', 'm', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '']
>>> data=re.findall("[sana,mana]*",s)
>>> data
['', 'sana', '', '', '', 'ana', '', 'mana', '', '', '', 'ana', '', '', 'ana', '']
>>> re.findall("^[s,m]",s)
[]
>>> re.findall("^[s,m]*",s)
['']
>>> re.findall("[s,m]$",s)
[]
>>> re.findall("[a]$",s)
['a']
>>> re.findall("*[a]$",s)
Traceback (most recent call last):
  File "<pyshell#57>", line 1, in <module>
    re.findall("*[a]$",s)
  File "D:\python37\lib\re.py", line 223, in findall
    return _compile(pattern, flags).findall(string)
  File "D:\python37\lib\re.py", line 286, in _compile
    p = sre_compile.compile(pattern, flags)
  File "D:\python37\lib\sre_compile.py", line 764, in compile
    p = sre_parse.parse(p, flags)
  File "D:\python37\lib\sre_parse.py", line 930, in parse
    p = _parse_sub(source, pattern, flags & SRE_FLAG_VERBOSE, 0)
  File "D:\python37\lib\sre_parse.py", line 426, in _parse_sub
    not nested and not items))
  File "D:\python37\lib\sre_parse.py", line 651, in _parse
    source.tell() - here + len(this))
re.error: nothing to repeat at position 0
>>> re.findall("[a]$*",s)
Traceback (most recent call last):
  File "<pyshell#58>", line 1, in <module>
    re.findall("[a]$*",s)
  File "D:\python37\lib\re.py", line 223, in findall
    return _compile(pattern, flags).findall(string)
  File "D:\python37\lib\re.py", line 286, in _compile
    p = sre_compile.compile(pattern, flags)
  File "D:\python37\lib\sre_compile.py", line 764, in compile
    p = sre_parse.parse(p, flags)
  File "D:\python37\lib\sre_parse.py", line 930, in parse
    p = _parse_sub(source, pattern, flags & SRE_FLAG_VERBOSE, 0)
  File "D:\python37\lib\sre_parse.py", line 426, in _parse_sub
    not nested and not items))
  File "D:\python37\lib\sre_parse.py", line 651, in _parse
    source.tell() - here + len(this))
re.error: nothing to repeat at position 4
>>> s
' sana dhana mana chana kana'
>>> re.findall("[a-z]",s)
['s', 'a', 'n', 'a', 'd', 'h', 'a', 'n', 'a', 'm', 'a', 'n', 'a', 'c', 'h', 'a', 'n', 'a', 'k', 'a', 'n', 'a']
>>> re.findall("[a-z]{4}",s)
['sana', 'dhan', 'mana', 'chan', 'kana']
>>> re.findall("[a-z]{3}",s)'
SyntaxError: EOL while scanning string literal
>>> re.findall("[a-z]{3}",s)
['san', 'dha', 'man', 'cha', 'kan']
>>> s2="amarpanchal9821601163amartohelp@yahoo.com"
>>> re.findall("[0-9]{10}",s)
[]
>>> re.findall("[0-9]{10}",s2)
['9821601163']
>>> s
' sana dhana mana chana kana'
>>> re.sub("[a-z]{4},"xxxx",s)
	   
SyntaxError: invalid syntax
>>> re.sub("[a-z]{4}","xxxx",s)
	   
' xxxx xxxxa xxxx xxxxa xxxx'
>>> re.sub("[s]{4}","xxxx",s)
	   
' sana dhana mana chana kana'
>>> re.sub("[s]","xxxx",s)
	   
' xxxxana dhana mana chana kana'
>>> re.sub("sana","xxxx",s)
	   
' xxxx dhana mana chana kana'
>>> re.split(" ",s)
	   
['', 'sana', 'dhana', 'mana', 'chana', 'kana']
>>> re.split("s",s)
	   
[' ', 'ana dhana mana chana kana']
>>> re.split("a",s)
	   
[' s', 'n', ' dh', 'n', ' m', 'n', ' ch', 'n', ' k', 'n', '']
>>> s3="pcname\username\file.extention"
	   
SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 6-7: truncated \uXXXX escape
>>> s3="pcname\username\file.extention"
	   
SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 6-7: truncated \uXXXX escape
>>> s3="pcname\\username\\file.extention"
	   
>>> s3
	   
'pcname\\username\\file.extention'
>>> re.split("\\",s3)
	   
Traceback (most recent call last):
  File "<pyshell#80>", line 1, in <module>
    re.split("\\",s3)
  File "D:\python37\lib\re.py", line 213, in split
    return _compile(pattern, flags).split(string, maxsplit)
  File "D:\python37\lib\re.py", line 286, in _compile
    p = sre_compile.compile(pattern, flags)
  File "D:\python37\lib\sre_compile.py", line 764, in compile
    p = sre_parse.parse(p, flags)
  File "D:\python37\lib\sre_parse.py", line 922, in parse
    source = Tokenizer(str)
  File "D:\python37\lib\sre_parse.py", line 232, in __init__
    self.__next()
  File "D:\python37\lib\sre_parse.py", line 246, in __next
    self.string, len(self.string) - 1) from None
re.error: bad escape (end of pattern) at position 0
>>> re.split("\\\\",s3)
['pcname', 'username', 'file.extention']
>>> s4="c:\amar\mydoc\vita.doc"
>>> re.split("\\",s4)
Traceback (most recent call last):
  File "<pyshell#83>", line 1, in <module>
    re.split("\\",s4)
  File "D:\python37\lib\re.py", line 213, in split
    return _compile(pattern, flags).split(string, maxsplit)
  File "D:\python37\lib\re.py", line 286, in _compile
    p = sre_compile.compile(pattern, flags)
  File "D:\python37\lib\sre_compile.py", line 764, in compile
    p = sre_parse.parse(p, flags)
  File "D:\python37\lib\sre_parse.py", line 922, in parse
    source = Tokenizer(str)
  File "D:\python37\lib\sre_parse.py", line 232, in __init__
    self.__next()
  File "D:\python37\lib\sre_parse.py", line 246, in __next
    self.string, len(self.string) - 1) from None
re.error: bad escape (end of pattern) at position 0
>>> re.split("\",s4)
	     
SyntaxError: EOL while scanning string literal
>>> re.split("\\\",s4)
	     
SyntaxError: EOL while scanning string literal
>>> re.split("\\\\",s4)
	     
['c:\x07mar', 'mydoc\x0bita.doc']
>>> re.split("\\",s4)
	     
Traceback (most recent call last):
  File "<pyshell#87>", line 1, in <module>
    re.split("\\",s4)
  File "D:\python37\lib\re.py", line 213, in split
    return _compile(pattern, flags).split(string, maxsplit)
  File "D:\python37\lib\re.py", line 286, in _compile
    p = sre_compile.compile(pattern, flags)
  File "D:\python37\lib\sre_compile.py", line 764, in compile
    p = sre_parse.parse(p, flags)
  File "D:\python37\lib\sre_parse.py", line 922, in parse
    source = Tokenizer(str)
  File "D:\python37\lib\sre_parse.py", line 232, in __init__
    self.__next()
  File "D:\python37\lib\sre_parse.py", line 246, in __next
    self.string, len(self.string) - 1) from None
re.error: bad escape (end of pattern) at position 0
>>> re.split("[\]",s4)
	     
Traceback (most recent call last):
  File "<pyshell#88>", line 1, in <module>
    re.split("[\]",s4)
  File "D:\python37\lib\re.py", line 213, in split
    return _compile(pattern, flags).split(string, maxsplit)
  File "D:\python37\lib\re.py", line 286, in _compile
    p = sre_compile.compile(pattern, flags)
  File "D:\python37\lib\sre_compile.py", line 764, in compile
    p = sre_parse.parse(p, flags)
  File "D:\python37\lib\sre_parse.py", line 930, in parse
    p = _parse_sub(source, pattern, flags & SRE_FLAG_VERBOSE, 0)
  File "D:\python37\lib\sre_parse.py", line 426, in _parse_sub
    not nested and not items))
  File "D:\python37\lib\sre_parse.py", line 532, in _parse
    source.tell() - here)
re.error: unterminated character set at position 0
>>> s4="c:\amar\mydoc\vita.doc"
>>> s4="c:\amar\mydoc\vita.doc"
>>> re.split("\W",s4)
['c', '', 'mar', 'mydoc', 'ita', 'doc']
>>> s5="amitabh'snumber is 982100000"
>>> re.sub("\d","@",s5)
"amitabh'snumber is @@@@@@@@@"
>>> re.sub("\D","@",s5)
'@@@@@@@@@@@@@@@@@@@982100000'
>>> s6="ASDFGH !@#$%^ 123456"
>>> re.sub("\D","@",s6)
'@@@@@@@@@@@@@@123456'
>>> re.sub("\d","@",s6)
'ASDFGH !@#$%^ @@@@@@'
>>> re.sub("\s","@",s6)
'ASDFGH@!@#$%^@123456'
>>> s6
'ASDFGH !@#$%^ 123456'
>>> re.sub("\s","~~~",s6)
'ASDFGH~~~!@#$%^~~~123456'
>>> re.sub("\S","~~~",s6)
'~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~'
>>> re.sub("\S","*",s6)
'****** ****** ******'
>>> re.sub("\d\S","~~~",s6)
'ASDFGH !@#$%^ ~~~~~~~~~'
>>> re.sub("\d\s","~~~",s6)
'ASDFGH !@#$%^ 123456'
>>> re.sub("\w","~~~",s6)
'~~~~~~~~~~~~~~~~~~ !@#$%^ ~~~~~~~~~~~~~~~~~~'
>>> re.sub("\W","~~~",s6)
'ASDFGH~~~~~~~~~~~~~~~~~~~~~~~~123456'
>>> s2
'amarpanchal9821601163amartohelp@yahoo.com'
>>> s3
'pcname\\username\\file.extention'
>>> s
' sana dhana mana chana kana'
>>> re.findall("$[a]",s)
[]
>>> re.findall("$\w",s)
[]
>>> re.findall("a$",s)
['a']
>>> re.findall("$a",s)
[]
>>> re.findall("a\$",s)
[]
>>> re.findall("[a]$",s)

['a']
>>> re.split("[a]$",s)
[' sana dhana mana chana kan', '']
>>> s7="amar
SyntaxError: EOL while scanning string literal
>>> s7='''
amar
zamar
tamar
umar
'''
>>> s7
'\namar\nzamar\ntamar\numar\n'
>>> re.split("\n",s7)
['', 'amar', 'zamar', 'tamar', 'umar', '']
>>> s7
'\namar\nzamar\ntamar\numar\n'
>>> s7
'\namar\nzamar\ntamar\numar\n'
>>> re.findall("[a]$",s)
['a']
>>> re.findall("[a$]",s)

['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
>>> re.split("[a$]",s)
[' s', 'n', ' dh', 'n', ' m', 'n', ' ch', 'n', ' k', 'n', '']
>>> split("\W",s)

Traceback (most recent call last):
  File "<pyshell#131>", line 1, in <module>
    split("\W",s)
NameError: name 'split' is not defined
>>> re.split("\W",st)
Traceback (most recent call last):
  File "<pyshell#132>", line 1, in <module>
    re.split("\W",st)
NameError: name 'st' is not defined
>>> re.split("\W",s7)
['', 'amar', 'zamar', 'tamar', 'umar', '']
>>> s8='''amar is 34 radha was 23 amit is 30 and sham was 45'''
>>> s8
'amar is 34 radha was 23 amit is 30 and sham was 45'
>>> re.findall("\d ",s8)
['4 ', '3 ', '0 ']
>>> re.findall("\d[0-9] ",s8)
['34 ', '23 ', '30 ']
>>> re.findall("\d{1-3} ",s8)
[]
>>> re.findall(r"\d{1-3} ",s8)
[]
>>> re.findall(r"d{1-3} ",s8)
[]
>>> re.findall(r"d{1,3} ",s8)
['d ']
>>> re.findall("\d[0-9]",s8)
['34', '23', '30', '45']
>>> re.findall("\d[0-9] ",s8)
['34 ', '23 ', '30 ']
>>> re.findall(" \d[0-9]",s8)
[' 34', ' 23', ' 30', ' 45']
>>> re.findall(" \d[0-9]",s8)
[' 34', ' 23', ' 30', ' 45']
>>> s9="area codes are +91 +223 +111 +37 +56 numbers are 121 123 32 445 45 6 46 45"
>>> re.findall("\+\d[0-9]",s9)
['+91', '+22', '+11', '+37', '+56']
>>> re.findall("\+\d*[0-9]",s9)
['+91', '+223', '+111', '+37', '+56']
>>> re.findall(" \+\d{3}",s9)
[' +223', ' +111']
>>> 
